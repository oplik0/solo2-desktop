name: "Release"

on:
  push:
    branches:
      - alpha

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
      sha: ${{ steps.release-please.outputs.sha }}
      release_id: ${{ steps.get-release-id.outputs.release_id }}
    steps:
      - uses: actions/checkout@v3
      - name: Run release-please
        id: release-please
        uses: google-github-actions/release-please-action@v3
        with:
          command: manifest
          release-type: node
      - name: Get release id
        id: get-release-id
        if: ${{ steps.release-please.outputs.releases_created }}
        run: echo "release_id=$(gh release view ${{ steps.release-please.outputs.tag_name }} --json id --template "{{.id}}")" >> "$GITHUB_OUTPUT"
  build-tauri:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && needs.release-please.outputs.releases_created }}
    needs: release-please
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
        with:
          ref: ${{ fromJSON(needs.release-please.outputs.sha) }}
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: pnpm
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libudev-dev build-essential curl wget libssl-dev libpcsclite-dev
      - name: remove pre-release (windows only)
        if: matrix.platform == 'windows-latest'
        run: (Get-Content ./package.json) -Replace '(\d+\.\d+\.\d+)-alpha\.\d+', '$1' | Set-Content ./package.json
        shell: powershell
      - name: install app dependencies and build it
        run: pnpm install && pnpm build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.release-please.outputs.release_id }}
          tagName: ${{ needs.release-please.outputs.tag_name }}
          tauriScript: pnpm tauri